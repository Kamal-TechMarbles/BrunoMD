<style>
  .modal2 {
   
  position: fixed;
     display:none;
 
 padding-top:100px;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color:rgba(0,0,0,0.4);
z-index: 999;

}

@media only screen and (max-width: 600px) {
  .custom-video-container {
    background-color: #fefefe;
  margin: auto;
 
  border: 5px solid #888;
  width: 100%;
 
}

.coverimg
  {
    padding-left: 5%;
    padding-right: 5%;
  }

}
  @media only screen and (min-width: 601px) {
  .custom-video-container {
    background-color: #fefefe;
  margin: auto;
 
  border: 5px solid #888;
  width: 70%;
 
} 
  
.coverimg
  {padding-left: 15%;
    padding-right: 15%;
  }
  
  }
 
 
     
     .close {
  color:#aaaaaa;
  float:right;
    top:100%;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: #000;
  text-decoration: none;
  cursor: pointer;
}

   

</style>


  <div id="modalchart" class="modal2">
      <div class="custom-video-container">
     
          
   
       
    </div>
    </div>

<div class="coverimg">
<img id="player" src="{{ section.settings.cover | img_url: 'master' }}" style="width:100%">
</div>


    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script>
     
	
      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '560',
          width: '640',
          videoId: '{{section.settings.url.id}}',
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
		console.log("state changed");
      }
 
       
    
   
     $('#player').click(function(){
		
		console.log('Player clicked');
 // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);


     });  
        

  </script>



{% schema %}
{
  "name": "Custom Video",
  "class": "section-video",
  "settings": [
    
    {
      "type": "video_url",
      "id": "url",
      "label": "Link",
      "accept": ["youtube"],
      "default": "https://www.youtube.com/watch?v=_9VUPq3SxOc"
    },
    {
      "type": "image_picker",
      "id": "cover",
      "label": "Cover image"
    }
    
  ],
  "presets": [
    {
      "category": "Video",
      "name": "Custom Video"
    }
  ]
}

{% endschema %}